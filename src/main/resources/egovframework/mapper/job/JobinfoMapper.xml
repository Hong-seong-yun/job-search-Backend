<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.mapper.job.JobinfoMapper">
   
   <select id="selectJobinfoList" resultType="egovframework.job.dto.JobinfoDTO">
        SELECT * FROM JOBINFO LIMIT 10
    </select>
    
    <!-- 구직정보 단일 단순조회(찜여부X) -->
    <select id="selectJobinfoById" resultType="egovframework.job.dto.JobinfoSearchResponse">
    SELECT J.j_id , J.d_date, C.c_name, C.address, C.c_type, J.job_type, J.employment_type, J.payment_type, J.payment, J.career, J.edu, J.r_date, J.detail
      FROM JOBINFO J INNER JOIN COMPANY C
      ON J.c_num = C.c_num
      WHERE j_id = #{j_id}
    </select>

    <select id="selectJById" resultType="egovframework.job.dto.JobinfoDTO">
        SELECT * FROM JOBINFO WHERE j_id = #{j_id}
    </select>
    
    <!-- 구직정보 생성 -->
    <insert id="createJobinfo" parameterType="egovframework.job.dto.JobinfoDTO">
        INSERT INTO JOBINFO (j_id, d_date, job_type, employment_type, payment_type, payment, career, edu, r_date, detail)
        VALUES (#{j_id}, #{d_date}, #{job_type}, #{employment_type}, #{payment_type}, #{payment}, #{career}, #{edu}, #{r_date}, #{detail})
    </insert>
    
    <!-- 구직정보 수정 -->
    <update id="updateJobinfo" parameterType="egovframework.job.dto.JobinfoDTO">
        UPDATE JOBINFO
	        <set>
		      <if test="d_date != null">
		        d_date = #{d_date},
		      </if>
		      <if test="job_type != null">
		        job_type = #{job_type},
		      </if>
		      <if test="employment_type != null">
		        employment_type = #{employment_type},
		      </if>
		      <if test="payment_type != null">
		        payment_type = #{payment_type},
		      </if>
		      <if test="payment != null">
		        payment = #{payment},
		      </if>
		      <if test="career != null">
		        career = #{career},
		      </if>
		      <if test="career != null">
		        career = #{career},
		      </if>
		      <if test="edu != null">
		        edu = #{edu},
		      </if>
		      <if test="r_date != null">
		        r_date = #{r_date},
		      </if>
		      <if test="detail != null">
		        detail = #{detail}
		      </if>
	   		</set>
        WHERE j_id = #{j_id}
    </update>
    
    <!-- 구직정보 삭제 -->
    <delete id="deleteJobinfo" parameterType="Long">
        delete from JOBINFO where j_id=#{j_id}
    </delete>
    
    <!-- 회원별 본인이 찜한 데이터(True, False로 판단) -->
    <select id="searchJobinfo" resultType="egovframework.job.dto.JobinfoSearchResponse" parameterType="egovframework.job.dto.JobinfoSearchRequest">
      SELECT J.j_id , J.d_date, C.c_name, J.job_type, J.employment_type, J.payment_type, J.payment, J.career, J.edu, J.r_date, J.detail, C.address, C.c_type
      , (CASE
	      WHEN J.j_id IN (
	        SELECT W.j_num
	        FROM WISH W
	        WHERE W.m_num = #{memberId}
	      ) THEN 'True'
      	  ELSE 'False'
    	END) AS state
      FROM (JOBINFO J INNER JOIN COMPANY C
      ON J.c_num = C.c_num)
      <where>
         <if test="employment_type != null">
         	<if test="employment_type.length > 0">
               and J.employment_type in 
               <foreach item="employmenttype" collection="employment_type" open="(" close=")" separator="," >
                  #{employmenttype}
               </foreach>
            </if>
         </if>
         <if test="payment_type != null">
         	<if test="payment_type.length > 0">
               and J.payment_type in 
               <foreach item="paymenttype" collection="payment_type" open="(" close=")" separator="," >
                  #{paymenttype}
               </foreach>
            </if>
         </if>
         <if test="address != null">
         	<if test="address.length > 0">
			  	and (
			    <foreach item="i" collection="address" separator="OR">
		            C.address LIKE CONCAT(#{i}, '%')
		        </foreach>
			    )
		    </if>
		 </if>
         <if test="c_type != null">
         	<if test="c_type.length > 0">
               and C.c_type in 
               <foreach item="type" collection="c_type" open="(" close=")" separator="," >
                  #{type}
               </foreach>
            </if>
         </if>
         <choose>
            <when test="job_type == '업종'">
               and J.job_type LIKE CONCAT('%', #{keyword}, '%')
            </when>
            <when test="job_type == '기업명'">
               and C.c_name LIKE CONCAT('%', #{keyword}, '%')
            </when>
         </choose>   
      </where>
      <choose>
         <when test="sort == '최신순'">
         	ORDER BY STR_TO_DATE(J.r_date, '%Y-%m-%d') DESC
         </when>
         <when test="sort == '임금순'">
            ORDER BY J.payment DESC
         </when>
         <when test="sort == '마감순'">
            ORDER BY STR_TO_DATE(J.d_date, '%Y-%m-%d') ASC
         </when>
      </choose>
   </select>
   
    <select id="selectJobTypeByCNum"  parameterType="Long" resultType="hashmap" >
        SELECT j_id ,job_type, d_date FROM JOBINFO WHERE c_num = #{c_num}
    </select>
    
</mapper>